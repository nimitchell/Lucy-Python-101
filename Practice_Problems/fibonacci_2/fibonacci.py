
"""
######################################################################################################################################
Implement a function to generate the n-th numbers in the fibonacci sequence using recursion
(Hint: remember a recursive function calls itself)

The Fibonacci sequence is a string of numbers generated by a looping formula where
f3 = f2 + f1
it starts with f1 = 1 and f2 = 2 so
f3 = 2 + 1
   = 3

Then to generate the next number in the sequence you repeat the process with f3 (3) and f2 (2)
f4 = f3 + f2
   = 3 + 2
   = 5

Then we can repeat this process again for f4
f5 = f4 + f3
   = 5 + 3
   = 8

This process loops n times to create the first n values of the fibonacci sequence using the formula
f(n) = f(n-1) + f(n-2)

to explain this, the current value of fib is equal to the last two values added togather, looks complicated but
if you think about it, it's not too confusing!
######################################################################################################################################
"""

# return the n-th value of the fibonacci sequence starting with 1
def fib(n):
    # base cases

    # recursive case

    return 0 # this is a placeholder which should be removed when you write your code!


"""
######################################################################################################################################
This test function is used to test the code you write, you can ignore them, but when you run main these are the tests that will run
######################################################################################################################################
"""
def test_fib():
    result = ["FAILED", "PASSED"]
    test1 = fib(1)
    print(f"test1 {result[test1 == 1]}\n", f"expected:1", f"got:{test1}\n")
    test2 = fib(2)
    print(f"test2 {result[test2 == 2]}\n", f"expected:2", f"got:{test2}\n")
    test3 = fib(4)
    print(f"test2 {result[test2 == 5]}\n", f"expected:5", f"got:{test3}\n")
    test4 = fib(10)
    print(f"test4 {result[test4 == 89]}\n", f"expected:89", f"got:{test4}\n")


# run the tests
test_fib()
# run your code in an infinite loop
while True:
    n = input("enter a value for n: ")
    print(fib(n))